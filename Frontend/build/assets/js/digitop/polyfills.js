"use strict";function randomVersion(){return"?v="+ +new Date+(99*Math.random()<<0)}"function"!=typeof Object.assign&&Object.defineProperty(Object,"assign",{value:function(t,n){if(null==t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),r=1;r<arguments.length;r++){var i=arguments[r];if(null!=i)for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(e[o]=i[o])}return e},writable:!0,configurable:!0}),String.prototype.includes||(String.prototype.includes=function(t,n){return"number"!=typeof n&&(n=0),!(n+t.length>this.length)&&-1!==this.indexOf(t,n)}),Array.prototype.find||Object.defineProperty(Array.prototype,"find",{value:function(t){if(null==this)throw TypeError('"this" is null or not defined');var n=Object(this),e=n.length>>>0;if("function"!=typeof t)throw TypeError("predicate must be a function");for(var r=arguments[1],i=0;i<e;){var o=n[i];if(t.call(r,o,i,n))return o;i++}},configurable:!0,writable:!0}),Object.defineProperties(Array.prototype,{first:{get:function(){return 0==this.length?null:this[0]}},last:{get:function(){return 0==this.length?null:this[this.length-1]}},randomIndex:{get:function(){return Math.floor(Math.random()*this.length)}},randomElement:{get:function(){return this[this.randomIndex]}}}),Object.assign(Array.prototype,{getRandom:function(t){var n=new Array(t),e=this.length,r=new Array(e);if(t>e)throw new RangeError("getRandom: more elements taken than available");for(;t--;){var i=Math.floor(Math.random()*e);n[t]=this[i in r?r[i]:i],r[i]=--e in r?r[e]:e}return n},getHalfRandom:function(){var t=Math.ceil(this.length/2);return this.getRandom(t)},shuffle:function(){var t,n,e=this.length;if(0==e)return this;for(;--e;)t=Math.floor(Math.random()*(e+1)),n=this[e],this[e]=this[t],this[t]=n;return this},moveIndex:function(t,n){if(n>=this.length)for(var e=n-this.length+1;e--;)this.push(void 0);return this.splice(n,0,this.splice(t,1)[0]),this}}),Object.assign(String.prototype,{isEmpty:function(){return null===this||null!==this.match(/^ *$/)},replaceAt:function(){return this.substr(0,index)+replacement+this.substr(index+replacement.length)}});